import sqlite3

from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import StatesGroup, State

from keyboards.admin_keyboards import currency_exchange_rate_keyboard
from system.dispatcher import dp, bot


class ExchangeRate(StatesGroup):
    """–°—Ç–∞—Ç—É—Å—ã –∑–∞–∫–∞–∑–∞"""
    byn_pln = State()
    byn_eur = State()
    byn_yuan = State()
    rub_pln = State()
    rub_eur = State()
    rub_yuan = State()


@dp.callback_query_handler(lambda c: c.data == 'change_exchange_rate')
async def exchange_rate_handlers(callback_query: types.CallbackQuery):
    """–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ —Å–∞–π—Ç—ã"""
    message_text_clothing = "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç–Ω—É—é –ø–∞—Ä—É –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç"
    # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç
    cur_exchange_rate_keyboard = currency_exchange_rate_keyboard()
    await bot.send_message(callback_query.from_user.id, message_text_clothing, reply_markup=cur_exchange_rate_keyboard,
                           disable_web_page_preview=True,
                           parse_mode=types.ParseMode.HTML)


@dp.callback_query_handler(lambda c: c.data == 'byn_pln_button')
async def byn_pln_handlers(callback_query: types.CallbackQuery):
    """–í–≤–æ–¥ –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç—ã –±–µ–ª–æ—Ä—É—Å—Å–∫–∏–π —Ä—É–±–ª—å –∫ –ø–æ–ª—å—Å–∫–æ–º—É –∑–ª–æ—Ç–æ–º—É"""
    user_id = callback_query.from_user.id
    await bot.send_message(user_id, "–í–≤–µ–¥–∏—Ç–µ –∫—É—Ä—Å –≤–∞–ª—é—Ç—ã")
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞ –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç—ã BYN/PLN
    await ExchangeRate.byn_pln.set()


@dp.callback_query_handler(lambda c: c.data == 'byn_eur_button')
async def byn_eur_handlers(callback_query: types.CallbackQuery):
    """–í–≤–æ–¥ –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç—ã –±–µ–ª–æ—Ä—É—Å—Å–∫–∏–π —Ä—É–±–ª—å –∫ –µ–≤—Ä–æ"""
    user_id = callback_query.from_user.id
    await bot.send_message(user_id, "–í–≤–µ–¥–∏—Ç–µ –∫—É—Ä—Å –≤–∞–ª—é—Ç—ã")
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞ –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç—ã BYN/EUR
    await ExchangeRate.byn_eur.set()


@dp.callback_query_handler(lambda c: c.data == 'byn_yuan_button')
async def byn_yuan_handlers(callback_query: types.CallbackQuery):
    """–í–≤–æ–¥ –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç—ã –±–µ–ª–æ—Ä—É—Å—Å–∫–∏–π —Ä—É–±–ª—å –∫ —é–∞–Ω—é"""
    user_id = callback_query.from_user.id
    await bot.send_message(user_id, "–í–≤–µ–¥–∏—Ç–µ –∫—É—Ä—Å –≤–∞–ª—é—Ç—ã")
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞ –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç—ã BYN/YUAN
    await ExchangeRate.byn_yuan.set()


@dp.callback_query_handler(lambda c: c.data == 'rub_pln_button')
async def rub_pln_handlers(callback_query: types.CallbackQuery):
    """–í–≤–æ–¥ –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç—ã —Ä–æ—Å—Å–∏–π—Å–∫–∏–π —Ä—É–±–ª—å –∫ –ø–æ–ª—å—Å–∫–æ–º—É –∑–ª–æ—Ç–æ–º—É"""
    user_id = callback_query.from_user.id
    await bot.send_message(user_id, "–í–≤–µ–¥–∏—Ç–µ –∫—É—Ä—Å –≤–∞–ª—é—Ç—ã")
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞ –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç—ã RUB/PLN
    await ExchangeRate.rub_pln.set()


@dp.callback_query_handler(lambda c: c.data == 'rub_eur_button')
async def rub_eur_handlers(callback_query: types.CallbackQuery):
    """–í–≤–æ–¥ –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç—ã —Ä–æ—Å—Å–∏–π—Å–∫–∏–π —Ä—É–±–ª—å –∫ –µ–≤—Ä–æ"""
    user_id = callback_query.from_user.id
    await bot.send_message(user_id, "–í–≤–µ–¥–∏—Ç–µ –∫—É—Ä—Å –≤–∞–ª—é—Ç—ã")
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞ –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç—ã RUB/EUR
    await ExchangeRate.rub_eur.set()


@dp.callback_query_handler(lambda c: c.data == 'rub_yuan_button')
async def rub_yuan_handlers(callback_query: types.CallbackQuery):
    """–í–≤–æ–¥ –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç—ã —Ä–æ—Å—Å–∏–π—Å–∫–∏–π —Ä—É–±–ª—å –∫ —é–∞–Ω—é"""
    user_id = callback_query.from_user.id
    await bot.send_message(user_id, "–í–≤–µ–¥–∏—Ç–µ –∫—É—Ä—Å –≤–∞–ª—é—Ç—ã")
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞ –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç—ã RUB/YUAN
    await ExchangeRate.rub_yuan.set()


# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö SQLite
conn = sqlite3.connect('setting/orders.db')
cursor = conn.cursor()
# –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É currencies, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
cursor.execute('''CREATE TABLE IF NOT EXISTS currencies 
                  (id INTEGER PRIMARY KEY, BYN_PLN REAL, BYN_EUR REAL, BYN_YUAN REAL, RUB_PLN REAL, RUB_EUR REAL, RUB_YUAN REAL)''')
conn.commit()


@dp.message_handler(state=ExchangeRate.byn_pln)
async def byn_pln_handlers(message: types.Message, state: FSMContext):
    byn_pln = float(message.text)
    currency = 'BYN_PLN'
    rate = byn_pln
    cursor.execute("SELECT * FROM currencies")
    existing_record = cursor.fetchone()
    if existing_record:
        # –ï—Å–ª–∏ –∑–∞–ø–∏—Å—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ–±–Ω–æ–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –≤ –Ω–µ–π
        cursor.execute("UPDATE currencies SET BYN_PLN=? WHERE id=?", (rate, 1))
        conn.commit()
        await message.reply(
            f"üåç –ö—É—Ä—Å {currency} —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω! üåç \n\nüìå –î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –Ω–∞—á–∞–ª—å–Ω–æ–µ –º–µ–Ω—é, –Ω–∞–∂–º–∏—Ç–µ /start_admin üìå ")
    else:
        # –ï—Å–ª–∏ –∑–∞–ø–∏—Å—å –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –≤—Å—Ç–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å
        cursor.execute("INSERT INTO currencies (id, BYN_PLN) VALUES (?, ?)", (1, rate))
        conn.commit()
        await message.reply(f"–ö—É—Ä—Å {currency} —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!")
    await state.finish()


@dp.message_handler(state=ExchangeRate.byn_eur)
async def byn_eur_handlers(message: types.Message, state: FSMContext):
    byn_eur = float(message.text)
    currency = 'BYN_EUR'
    rate = byn_eur
    cursor.execute("SELECT * FROM currencies")
    existing_record = cursor.fetchone()
    if existing_record:
        # –ï—Å–ª–∏ –∑–∞–ø–∏—Å—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ–±–Ω–æ–≤–ª—è–µ–º –∫—É—Ä—Å –≤–∞–ª—é—Ç—ã
        cursor.execute("UPDATE currencies SET BYN_EUR=? WHERE id=?", (rate, 1))
        conn.commit()
        await message.reply(
            f"üåç –ö—É—Ä—Å {currency} —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω! üåç \n\nüìå –î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –Ω–∞—á–∞–ª—å–Ω–æ–µ –º–µ–Ω—é, –Ω–∞–∂–º–∏—Ç–µ /start_admin üìå ")
    else:
        # –ï—Å–ª–∏ –∑–∞–ø–∏—Å—å –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –≤—Å—Ç–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å
        cursor.execute("INSERT INTO currencies (id, BYN_EUR) VALUES (?, ?)", (1, rate))
        conn.commit()
        await message.reply(f"–ö—É—Ä—Å {currency} —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!")
    await state.finish()


@dp.message_handler(state=ExchangeRate.byn_yuan)
async def byn_yuan_handlers(message: types.Message, state: FSMContext):
    byn_yuan = float(message.text)
    currency = 'BYN_YUAN'
    rate = byn_yuan
    cursor.execute("SELECT * FROM currencies")
    existing_record = cursor.fetchone()
    if existing_record:
        # –ï—Å–ª–∏ –∑–∞–ø–∏—Å—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ–±–Ω–æ–≤–ª—è–µ–º –∫—É—Ä—Å –≤–∞–ª—é—Ç—ã
        cursor.execute("UPDATE currencies SET BYN_YUAN=? WHERE id=?", (rate, 1))
        conn.commit()
        await message.reply(
            f"üåç –ö—É—Ä—Å {currency} —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω! üåç \n\nüìå –î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –Ω–∞—á–∞–ª—å–Ω–æ–µ –º–µ–Ω—é, –Ω–∞–∂–º–∏—Ç–µ /start_admin üìå ")
    else:
        # –ï—Å–ª–∏ –∑–∞–ø–∏—Å—å –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –≤—Å—Ç–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å
        cursor.execute("INSERT INTO currencies (id, BYN_YUAN) VALUES (?, ?)", (1, rate))
        conn.commit()
        await message.reply(f"–ö—É—Ä—Å {currency} —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!")
    await state.finish()


@dp.message_handler(state=ExchangeRate.rub_pln)
async def rub_pln_handlers(message: types.Message, state: FSMContext):
    rub_pln = float(message.text)
    currency = 'RUB_PLN'
    rate = rub_pln
    cursor.execute("SELECT * FROM currencies")
    existing_record = cursor.fetchone()
    if existing_record:
        # –ï—Å–ª–∏ –∑–∞–ø–∏—Å—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ–±–Ω–æ–≤–ª—è–µ–º –∫—É—Ä—Å –≤–∞–ª—é—Ç—ã
        cursor.execute("UPDATE currencies SET RUB_PLN=? WHERE id=?", (rate, 1))
        conn.commit()
        await message.reply(
            f"üåç –ö—É—Ä—Å {currency} —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω! üåç \n\nüìå –î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –Ω–∞—á–∞–ª—å–Ω–æ–µ –º–µ–Ω—é, –Ω–∞–∂–º–∏—Ç–µ /start_admin üìå ")
    else:
        # –ï—Å–ª–∏ –∑–∞–ø–∏—Å—å –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –≤—Å—Ç–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å
        cursor.execute("INSERT INTO currencies (id, RUB_PLN) VALUES (?, ?)", (1, rate))
        conn.commit()
        await message.reply(f"–ö—É—Ä—Å {currency} —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!")
    await state.finish()


@dp.message_handler(state=ExchangeRate.rub_eur)
async def rub_eur_handlers(message: types.Message, state: FSMContext):
    rub_eur = float(message.text)
    currency = 'RUB_EUR'
    rate = rub_eur
    cursor.execute("SELECT * FROM currencies")
    existing_record = cursor.fetchone()
    if existing_record:
        # –ï—Å–ª–∏ –∑–∞–ø–∏—Å—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ–±–Ω–æ–≤–ª—è–µ–º –∫—É—Ä—Å –≤–∞–ª—é—Ç—ã
        cursor.execute("UPDATE currencies SET RUB_EUR=? WHERE id=?", (rate, 1))
        conn.commit()
        await message.reply(
            f"üåç –ö—É—Ä—Å {currency} —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω! üåç \n\nüìå –î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –Ω–∞—á–∞–ª—å–Ω–æ–µ –º–µ–Ω—é, –Ω–∞–∂–º–∏—Ç–µ /start_admin üìå ")
    else:
        # –ï—Å–ª–∏ –∑–∞–ø–∏—Å—å –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –≤—Å—Ç–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å
        cursor.execute("INSERT INTO currencies (id, RUB_EUR) VALUES (?, ?)", (1, rate))
        conn.commit()
        await message.reply(f"–ö—É—Ä—Å {currency} —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!")
    await state.finish()


@dp.message_handler(state=ExchangeRate.rub_yuan)
async def rub_yuan_handlers(message: types.Message, state: FSMContext):
    rub_yuan = float(message.text)
    currency = 'RUB_YUAN'
    rate = rub_yuan
    cursor.execute("SELECT * FROM currencies")
    existing_record = cursor.fetchone()
    if existing_record:
        # –ï—Å–ª–∏ –∑–∞–ø–∏—Å—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ–±–Ω–æ–≤–ª—è–µ–º –∫—É—Ä—Å –≤–∞–ª—é—Ç—ã
        cursor.execute("UPDATE currencies SET RUB_YUAN=? WHERE id=?", (rate, 1))
        conn.commit()
        await message.reply(
            f"üåç –ö—É—Ä—Å {currency} —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω! üåç \n\nüìå –î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –Ω–∞—á–∞–ª—å–Ω–æ–µ –º–µ–Ω—é, –Ω–∞–∂–º–∏—Ç–µ /start_admin üìå ")
    else:
        # –ï—Å–ª–∏ –∑–∞–ø–∏—Å—å –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –≤—Å—Ç–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å
        cursor.execute("INSERT INTO currencies (id, RUB_YUAN) VALUES (?, ?)", (1, rate))
        conn.commit()
        await message.reply(f"–ö—É—Ä—Å {currency} —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!")
    await state.finish()


def register_exchange_rate_handlers():
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º handlers –¥–ª—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π"""
    dp.register_message_handler(exchange_rate_handlers)
    dp.register_message_handler(byn_pln_handlers)
    dp.register_message_handler(byn_eur_handlers)
    dp.register_message_handler(byn_yuan_handlers)
    dp.register_message_handler(rub_pln_handlers)
    dp.register_message_handler(rub_eur_handlers)
    dp.register_message_handler(rub_yuan_handlers)
