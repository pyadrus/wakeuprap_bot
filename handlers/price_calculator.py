# from aiogram import types
# from aiogram.dispatcher import FSMContext
# from aiogram.dispatcher.filters.state import StatesGroup, State
#
# from keyboards.clothing_keyboard import clothing_keyboard
# from keyboards.delivery_keyboard import delivery_keyboard, delivery_keyboard_technics
# from messages.message_text_calculate import message_text_calculate, message_text_price, message_text_kg
# # from messages.message_text_clothing import message_text_clothing
# from services.exchange import get_currency_rate  # –ü–æ–ª—É—á–µ–Ω–∏–µ –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç
# from system.dispatcher import dp, bot
# from utils.validation import calculate_insurance_price, calculate_commission_price
#
#
# # –°–æ–∑–¥–∞–µ–º –∫–ª–∞—Å—Å —Å–æ—Å—Ç–æ—è–Ω–∏–π
# class TechStateAircraft(StatesGroup):
#     """–î–æ—Å—Ç–∞–≤–∫–∞ —Å–∞–º–æ–ª–µ—Ç–æ–º üöÄ 1-3 –¥–Ω—è"""
#     price_Aircraft = State()
#     weight_Aircraft = State()  # –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –≤–≤–æ–¥–∞ –≤–µ—Å–∞ –≤ –∫–∏–ª–æ–≥—Ä–∞–º–º–∞—Ö
#
#
# class TechStateAcceleratedByTruck(StatesGroup):
#     """–î–æ—Å—Ç–∞–≤–∫–∞ —É—Å–∫–æ—Ä–µ–Ω–Ω–æ–π —Ñ—É—Ä–æ–π üöõ 8-15 –¥–Ω–µ–∏ÃÜ"""
#     price_AcceleratedByTruck = State()
#     weight_AcceleratedByTruck = State()  # –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –≤–≤–æ–¥–∞ –≤–µ—Å–∞ –≤ –∫–∏–ª–æ–≥—Ä–∞–º–º–∞—Ö
#
#
# class TechStateRegularTruck(StatesGroup):
#     """–î–æ—Å—Ç–∞–≤–∫–∞ –æ–±—ã—á–Ω–æ–π —Ñ—É—Ä–æ–π üöö 20-30 –¥–Ω–µ–π"""
#     price_RegularTruck = State()
#     weight_RegularTruck = State()  # –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –≤–≤–æ–¥–∞ –≤–µ—Å–∞ –≤ –∫–∏–ª–æ–≥—Ä–∞–º–º–∞—Ö
#
#
# @dp.callback_query_handler(lambda c: c.data == 'price_calculator')
# async def calculate_cost_handler(callback_query: types.CallbackQuery):
#     """–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Ü–µ–Ω—ã"""
#     keyboard_clothes = clothing_keyboard()
#     # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–æ–≤–∞—Ä–∞
#     await bot.send_message(callback_query.from_user.id, message_text_clothing, reply_markup=keyboard_clothes,
#                            parse_mode=types.ParseMode.HTML)
#
#
# @dp.callback_query_handler(lambda c: c.data == 'footwear')
# async def calculate_cost_handler(callback_query: types.CallbackQuery, state: FSMContext):
#     """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–∞—Å—á–µ—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –¥–ª—è üëü –û–±—É–≤—å"""
#     delivery = delivery_keyboard()  # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–æ–≤–∞—Ä–∞
#     await bot.send_message(callback_query.from_user.id, message_text_calculate, reply_markup=delivery,
#                            parse_mode=types.ParseMode.HTML)
#     exchange_rate = 1  # –ú–∞—Å—Å–∞ –≤ 1 –∫–≥
#     await state.update_data(exchange_rate=exchange_rate)  # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏, –∞–Ω–∞–ª–æ–≥ return
#
#
# @dp.callback_query_handler(lambda c: c.data == 'trousers')
# async def calculate_cost_handler(callback_query: types.CallbackQuery, state: FSMContext):
#     """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–∞—Å—á–µ—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –¥–ª—è üëñ –®—Ç–∞–Ω—ã"""
#     delivery = delivery_keyboard()  # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–æ–≤–∞—Ä–∞
#     await bot.send_message(callback_query.from_user.id, message_text_calculate, reply_markup=delivery,
#                            parse_mode=types.ParseMode.HTML)
#     exchange_rate = 0.8  # –ú–∞—Å—Å–∞ –≤ 0.8 –∫–≥
#     await state.update_data(exchange_rate=exchange_rate)  # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏, –∞–Ω–∞–ª–æ–≥ return
#
#
# @dp.callback_query_handler(lambda c: c.data == 'hoodies')
# async def calculate_cost_handler(callback_query: types.CallbackQuery, state: FSMContext):
#     """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–∞—Å—á–µ—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –¥–ª—è ü•º –•—É–¥–∏"""
#     delivery = delivery_keyboard()  # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–æ–≤–∞—Ä–∞
#     await bot.send_message(callback_query.from_user.id, message_text_calculate, reply_markup=delivery,
#                            parse_mode=types.ParseMode.HTML)
#     exchange_rate = 1  # –ú–∞—Å—Å–∞ –≤ 1 –∫–≥
#     await state.update_data(exchange_rate=exchange_rate)  # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏, –∞–Ω–∞–ª–æ–≥ return
#
#
# @dp.callback_query_handler(lambda c: c.data == 'down_jacket_down')
# async def calculate_cost_handler(callback_query: types.CallbackQuery, state: FSMContext):
#     """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–∞—Å—á–µ—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –¥–ª—è üß• –ü—É—Ö–æ–≤–∏–∫ (–ø—É—Ö)"""
#     delivery = delivery_keyboard()  # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–æ–≤–∞—Ä–∞
#     await bot.send_message(callback_query.from_user.id, message_text_calculate, reply_markup=delivery,
#                            parse_mode=types.ParseMode.HTML)
#     exchange_rate = 2  # –ú–∞—Å—Å–∞ –≤ 2 –∫–≥
#     await state.update_data(exchange_rate=exchange_rate)  # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏, –∞–Ω–∞–ª–æ–≥ return
#
#
# @dp.callback_query_handler(lambda c: c.data == 'down_jacket_synthetic')
# async def calculate_cost_handler(callback_query: types.CallbackQuery, state: FSMContext):
#     """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–∞—Å—á–µ—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –¥–ª—è üß• –ü—É—Ö–æ–≤–∏–∫ (—Å–∏–Ω—Ç–µ—Ç–∏–∫–∞)"""
#     delivery = delivery_keyboard()  # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–æ–≤–∞—Ä–∞
#     await bot.send_message(callback_query.from_user.id, message_text_calculate, reply_markup=delivery,
#                            parse_mode=types.ParseMode.HTML)
#     exchange_rate = 1.2  # –ú–∞—Å—Å–∞ –≤ 1.2 –∫–≥
#     await state.update_data(exchange_rate=exchange_rate)  # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏, –∞–Ω–∞–ª–æ–≥ return
#
#
# @dp.callback_query_handler(lambda c: c.data == 'backpack')
# async def calculate_cost_handler(callback_query: types.CallbackQuery, state: FSMContext):
#     """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–∞—Å—á–µ—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –¥–ª—è üéí –†—é–∫–∑–∞–∫"""
#     delivery = delivery_keyboard()  # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–æ–≤–∞—Ä–∞
#     await bot.send_message(callback_query.from_user.id, message_text_calculate, reply_markup=delivery,
#                            parse_mode=types.ParseMode.HTML)
#     exchange_rate = 0.6  # –ú–∞—Å—Å–∞ –≤ 0.6 –∫–≥
#     await state.update_data(exchange_rate=exchange_rate)  # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏, –∞–Ω–∞–ª–æ–≥ return
#
#
# @dp.callback_query_handler(lambda c: c.data == 'shoulder_bag')
# async def calculate_cost_handler(callback_query: types.CallbackQuery, state: FSMContext):
#     """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–∞—Å—á–µ—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –¥–ª—è üëú –°—É–º–∫–∞ –Ω–∞–ø–ª–µ—á–Ω–∞—è"""
#     delivery = delivery_keyboard()  # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–æ–≤–∞—Ä–∞
#     await bot.send_message(callback_query.from_user.id, message_text_calculate, reply_markup=delivery,
#                            parse_mode=types.ParseMode.HTML)
#     exchange_rate = 0.2  # –ú–∞—Å—Å–∞ –≤ 0.2 –∫–≥
#     await state.update_data(exchange_rate=exchange_rate)  # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏, –∞–Ω–∞–ª–æ–≥ return
#
#
# @dp.callback_query_handler(lambda c: c.data == 'longsleeve')
# async def calculate_cost_handler(callback_query: types.CallbackQuery, state: FSMContext):
#     """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–∞—Å—á–µ—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –¥–ª—è üëï –õ–æ–Ω–≥—Å–ª–∏–≤ / –º–∞–π–∫–∞"""
#     delivery = delivery_keyboard()  # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–æ–≤–∞—Ä–∞
#     await bot.send_message(callback_query.from_user.id, message_text_calculate, reply_markup=delivery,
#                            parse_mode=types.ParseMode.HTML)
#     exchange_rate = 0.4  # –ú–∞—Å—Å–∞ –≤ 0.4 –∫–≥
#     await state.update_data(exchange_rate=exchange_rate)  # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏, –∞–Ω–∞–ª–æ–≥ return
#
#
# """–í–∏–¥—ã –¥–æ—Å—Ç–∞–≤–∫–∏"""
#
#
# @dp.callback_query_handler(lambda c: c.data == 'scheduled_aircraft')
# async def process_delivery_handler(callback_query: types.CallbackQuery, state: FSMContext):
#     """–í–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —Ü–µ–Ω—ã —Ç–æ–≤–∞—Ä–∞ –≤ —Ä—É–±–ª—è—Ö üöÄ –û–ø—Ü–∏—è "1-3 –¥–Ω—è"""
#     await bot.send_message(callback_query.from_user.id, message_text_price, parse_mode=types.ParseMode.HTML)
#     usd_rate = get_currency_rate('USD')  # –ö—É—Ä—Å –î–æ–ª–ª–∞—Ä–∞ –∫ —Ä—É–±–ª—é
#     data = await state.get_data()
#     exchange_rate = data.get('exchange_rate', 0)  # –í–µ—Å —Ç–æ–≤–∞—Ä–∞
#     shipping_cost = (35 * usd_rate) * exchange_rate
#     # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏, –∞–Ω–∞–ª–æ–≥ return
#     await state.update_data(shipping_cost=shipping_cost)
#
#
# @dp.callback_query_handler(lambda c: c.data == 'accelerated_by_truck')
# async def process_delivery_handler(callback_query: types.CallbackQuery, state: FSMContext):
#     """–í–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —Ü–µ–Ω—ã —Ç–æ–≤–∞—Ä–∞ –≤ —Ä—É–±–ª—è—Ö üöõ –û–ø—Ü–∏—è "8-15 –¥–Ω–µ–π"""
#     await bot.send_message(callback_query.from_user.id, message_text_price, parse_mode=types.ParseMode.HTML)
#     usd_rate = get_currency_rate('USD')  # –ö—É—Ä—Å –î–æ–ª–ª–∞—Ä–∞ –∫ —Ä—É–±–ª—é
#     data = await state.get_data()
#     exchange_rate = data.get('exchange_rate', 0)  # –í–µ—Å —Ç–æ–≤–∞—Ä–∞
#     shipping_cost = (12 * usd_rate) * exchange_rate
#     # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏, –∞–Ω–∞–ª–æ–≥ return
#     await state.update_data(shipping_cost=shipping_cost)
#
#
# @dp.callback_query_handler(lambda c: c.data == 'a_regular_truck')
# async def process_delivery_handler(callback_query: types.CallbackQuery, state: FSMContext):
#     """–í–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —Ü–µ–Ω—ã —Ç–æ–≤–∞—Ä–∞ –≤ —Ä—É–±–ª—è—Ö üöö –û–ø—Ü–∏—è "20-30 –¥–Ω–µ–π"""
#     await bot.send_message(callback_query.from_user.id, message_text_price, parse_mode=types.ParseMode.HTML)
#     usd_rate = get_currency_rate('USD')  # –ö—É—Ä—Å –î–æ–ª–ª–∞—Ä–∞ –∫ —Ä—É–±–ª—é
#     data = await state.get_data()
#     exchange_rate = data.get('exchange_rate', 0)  # –í–µ—Å —Ç–æ–≤–∞—Ä–∞
#     shipping_cost = (6 * usd_rate) * exchange_rate
#     # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏, –∞–Ω–∞–ª–æ–≥ return
#     await state.update_data(shipping_cost=shipping_cost)
#
#
# @dp.message_handler(content_types=types.ContentType.TEXT)
# async def process_price(message: types.Message, state: FSMContext):
#     """
#     –ö–æ–Ω–µ—á–Ω—ã–π —Ä–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –¥–æ—Å—Ç–∞–≤–∫–∏: –¶–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞ + –î–æ—Å—Ç–∞–≤–∫–∞ Poizon –¥–æ —Å–∫–ª–∞–¥–∞ –≤ –ö–∏—Ç–∞–µ + –°—Ç—Ä–∞—Ö–æ–≤–∫–∞ +
#                                         –î–æ—Å—Ç–∞–≤–∫–∞ –∏–∑ –ö–∏—Ç–∞—è –≤ –ú–æ—Å–∫–≤—É + –ö–æ–º–∏—Å—Å–∏—è = –ö–æ–Ω–µ—á–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞.
#     """
#     try:
#         cny_rate = get_currency_rate('CNY')  # –ö—É—Ä—Å –Æ–∞–Ω—è –∫ —Ä—É–±–ª—é
#         price = float(message.text)  # –¶–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞ –≤ –Æ–∞–Ω—è—Ö –≤–≤–µ–¥–µ–Ω–Ω–∞—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
#         delivery_rub_cn = 30 * cny_rate  # –¶–µ–Ω–∞ –¥–æ—Å—Ç–∞–≤–∫–∏ Poizon –¥–æ —Å–∫–ª–∞–¥–∞ –≤ –ö–∏—Ç–∞–π
#         insurance_price = calculate_insurance_price(price)  # –†–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Å—Ç—Ä–∞—Ö–æ–≤–∫–∏
#         commission_price = calculate_commission_price(price)  # –†–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∫–æ–º–∏—Å—Å–∏–∏
#         data = await state.get_data()
#         shipping_cost = data.get('shipping_cost', 0)  # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ –∏–∑ –ö–∏—Ç–∞—è –≤ –ú–æ—Å–∫–≤—É
#         # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∏—Ç–æ–≥–æ–≤—ã–µ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏—è
#         final_purchase_price = (price * cny_rate) + delivery_rub_cn + insurance_price + shipping_cost + commission_price
#         rounded_number = round(final_purchase_price, 2)  # –û–∫—Ä—É–≥–ª—è–µ–º –¥–æ 2 –∑–Ω–∞–∫–æ–≤ (–º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å)
#
#         message_text = (f"<b>–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–∫–∞–∑–∞ ‚âà {rounded_number} —Ä—É–±.</b>\n"
#                         "\n–î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –Ω–∞—á–∞–ª–æ –Ω–∞–∂–º–∏—Ç–µ /start")
#
#         await bot.send_message(message.chat.id, message_text)
#         await state.finish()
#     except ValueError:
#         await bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.")
#
#
# # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ —Ç–µ—Ö–Ω–∏–∫–∏
# @dp.callback_query_handler(lambda c: c.data == 'technics')
# async def process_technics(callback_query: types.CallbackQuery):
#     """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ —Ç–µ—Ö–Ω–∏–∫–∏"""
#     technics_delivery_keyboard = delivery_keyboard_technics()
#     await bot.send_message(callback_query.from_user.id, message_text_calculate, reply_markup=technics_delivery_keyboard)
#
#
# @dp.callback_query_handler(lambda c: c.data == "technics_a_regular_truck")
# async def process_delivery_handler(query: types.CallbackQuery):
#     """–í–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —Ü–µ–Ω—ã —Ç–æ–≤–∞—Ä–∞ –≤ —Ä—É–±–ª—è—Ö üöö 20-30 –¥–Ω–µ–π"""
#     await bot.send_message(query.from_user.id, message_text_kg, parse_mode=types.ParseMode.HTML)
#     await TechStateRegularTruck.weight_RegularTruck.set()  # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤–µ—Å–∞ –≤ –∫–∏–ª–æ–≥—Ä–∞–º–º–∞—Ö
#
#
# @dp.callback_query_handler(lambda c: c.data == "technics_accelerated_by_truck")
# async def process_delivery_handler(query: types.CallbackQuery):
#     """–í–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —Ü–µ–Ω—ã —Ç–æ–≤–∞—Ä–∞ –≤ —Ä—É–±–ª—è—Ö üöõ 8-15 –¥–Ω–µ–π"""
#     await bot.send_message(query.from_user.id, message_text_kg, parse_mode=types.ParseMode.HTML)
#     await TechStateAcceleratedByTruck.weight_AcceleratedByTruck.set()  # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤–µ—Å–∞ –≤ –∫–≥.
#
#
# @dp.callback_query_handler(lambda c: c.data == "technics_aircraft")
# async def process_delivery_handler(query: types.CallbackQuery):
#     """–í–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —Ü–µ–Ω—ã —Ç–æ–≤–∞—Ä–∞ –≤ —Ä—É–±–ª—è—Ö üöÄ 1-3 –¥–Ω—è"""
#     await bot.send_message(query.from_user.id, message_text_kg, parse_mode=types.ParseMode.HTML)
#     await TechStateAircraft.weight_Aircraft.set()  # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤–µ—Å–∞ –≤ –∫–∏–ª–æ–≥—Ä–∞–º–º–∞—Ö
#
#
# @dp.message_handler(state=TechStateAcceleratedByTruck.weight_AcceleratedByTruck)
# async def process_weight(message: types.Message, state: FSMContext):
#     """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –≤–µ—Å–∞ —Ç–µ—Ö–Ω–∏–∫–∏ üöõ 8-15 –¥–Ω–µ–π"""
#     exchange_rate = float(message.text)  # –í–µ—Å —Ç–æ–≤–∞—Ä–∞
#     usd_rate = get_currency_rate('USD')  # –ö—É—Ä—Å –î–æ–ª–ª–∞—Ä–∞ –∫ —Ä—É–±–ª—é
#     shipping_cost = (12 * usd_rate) * exchange_rate
#     await state.update_data(shipping_cost=shipping_cost)
#     await TechStateAcceleratedByTruck.price_AcceleratedByTruck.set()  # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞ —Ü–µ–Ω—ã
#     await bot.send_message(message.from_user.id, message_text_price, parse_mode=types.ParseMode.HTML)
#
#
# @dp.message_handler(state=TechStateRegularTruck.weight_RegularTruck)
# async def process_weight(message: types.Message, state: FSMContext):
#     """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –≤–µ—Å–∞ —Ç–µ—Ö–Ω–∏–∫–∏ üöö 20-30 –¥–Ω–µ–π"""
#     exchange_rate = float(message.text)  # –í–µ—Å —Ç–æ–≤–∞—Ä–∞
#     usd_rate = get_currency_rate('USD')  # –ö—É—Ä—Å –î–æ–ª–ª–∞—Ä–∞ –∫ —Ä—É–±–ª—é
#     shipping_cost = (6 * usd_rate) * exchange_rate
#     await state.update_data(shipping_cost=shipping_cost)
#     await TechStateRegularTruck.price_RegularTruck.set()  # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞ —Ü–µ–Ω—ã
#     await bot.send_message(message.from_user.id, message_text_price, parse_mode=types.ParseMode.HTML)
#
#
# @dp.message_handler(state=TechStateAircraft.weight_Aircraft)
# async def process_weight(message: types.Message, state: FSMContext):
#     """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –≤–µ—Å–∞ —Ç–µ—Ö–Ω–∏–∫–∏ üöÄ 1-3 –¥–Ω—è"""
#     exchange_rate = float(message.text)  # –í–µ—Å —Ç–æ–≤–∞—Ä–∞
#     usd_rate = get_currency_rate('USD')  # –ö—É—Ä—Å –î–æ–ª–ª–∞—Ä–∞ –∫ —Ä—É–±–ª—é
#     shipping_cost = (35 * usd_rate) * exchange_rate
#     await state.update_data(shipping_cost=shipping_cost)
#     await TechStateAircraft.price_Aircraft.set()  # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞ —Ü–µ–Ω—ã
#     await bot.send_message(message.from_user.id, message_text_price, parse_mode=types.ParseMode.HTML)
#
#
# @dp.message_handler(state=TechStateAircraft.price_Aircraft)
# async def process_price_input(message: types.Message, state: FSMContext):
#     """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–µ–¥–µ–Ω–Ω–æ–π —Ü–µ–Ω—ã —Ç–æ–≤–∞—Ä–∞ üöÄ 1-3 –¥–Ω—è"""
#     try:
#         await process_price_aircraft(message, state)  # –í—ã–∑–æ–≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è —Ü–µ–Ω—ã
#     except ValueError:
#         await bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è —Ü–µ–Ω—ã —Ç–æ–≤–∞—Ä–∞.")
#
#
# @dp.message_handler(state=TechStateAcceleratedByTruck.price_AcceleratedByTruck)
# async def process_price_input(message: types.Message, state: FSMContext):
#     """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–µ–¥–µ–Ω–Ω–æ–π —Ü–µ–Ω—ã —Ç–æ–≤–∞—Ä–∞ üöõ 8-15 –¥–Ω–µ–π"""
#     try:
#         await process_price_accelerated_by_truck(message, state)  # –í—ã–∑–æ–≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è —Ü–µ–Ω—ã
#     except ValueError:
#         await bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è —Ü–µ–Ω—ã —Ç–æ–≤–∞—Ä–∞.")
#
#
# @dp.message_handler(state=TechStateRegularTruck.price_RegularTruck)
# async def process_price_input(message: types.Message, state: FSMContext):
#     """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–µ–¥–µ–Ω–Ω–æ–π —Ü–µ–Ω—ã —Ç–æ–≤–∞—Ä–∞ üöö 20-30 –¥–Ω–µ–π"""
#     try:
#         await process_price_regular_truck(message, state)  # –í—ã–∑–æ–≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è —Ü–µ–Ω—ã
#     except ValueError:
#         await bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è —Ü–µ–Ω—ã —Ç–æ–≤–∞—Ä–∞.")
#
#
# async def process_price_aircraft(message: types.Message, state: FSMContext):
#     """
#     –ö–æ–Ω–µ—á–Ω—ã–π —Ä–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –¥–æ—Å—Ç–∞–≤–∫–∏: –¶–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞ + –î–æ—Å—Ç–∞–≤–∫–∞ Poizon –¥–æ —Å–∫–ª–∞–¥–∞ –≤ –ö–∏—Ç–∞–µ + –°—Ç—Ä–∞—Ö–æ–≤–∫–∞ +
#                                         –î–æ—Å—Ç–∞–≤–∫–∞ –∏–∑ –ö–∏—Ç–∞—è –≤ –ú–æ—Å–∫–≤—É + –ö–æ–º–∏—Å—Å–∏—è = –ö–æ–Ω–µ—á–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞.
#     """
#     try:
#         # –ü–æ–ª—É—á–µ–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–ª—è —Ç–∏–ø–∞ —Ç–µ—Ö–Ω–∏–∫–∏ "–î–æ—Å—Ç–∞–≤–∫–∞ —Å–∞–º–æ–ª–µ—Ç–æ–º"
#         data = await state.get_data()
#         shipping_cost = data.get('shipping_cost', 0)  # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ –∏–∑ –ö–∏—Ç–∞—è –≤ –ú–æ—Å–∫–≤—É
#         cny_rate = get_currency_rate('CNY')  # –ö—É—Ä—Å –Æ–∞–Ω—è –∫ —Ä—É–±–ª—é
#         price = float(message.text)  # –¶–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞ –≤ –Æ–∞–Ω—è—Ö –≤–≤–µ–¥–µ–Ω–Ω–∞—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
#         delivery_rub_cn = 30 * cny_rate  # –¶–µ–Ω–∞ –¥–æ—Å—Ç–∞–≤–∫–∏ Poizon –¥–æ —Å–∫–ª–∞–¥–∞ –≤ –ö–∏—Ç–∞–π
#         insurance_price = calculate_insurance_price(price)  # –†–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Å—Ç—Ä–∞—Ö–æ–≤–∫–∏
#         commission_price = calculate_commission_price(price)  # –†–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∫–æ–º–∏—Å—Å–∏–∏
#         # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∏—Ç–æ–≥–æ–≤—ã–µ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏—è
#         final_purchase_price = (price * cny_rate) + delivery_rub_cn + insurance_price + shipping_cost + commission_price
#         rounded_number = round(final_purchase_price, 2)  # –û–∫—Ä—É–≥–ª—è–µ–º –¥–æ 2 –∑–Ω–∞–∫–æ–≤ (–º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å)
#         message_text = (f"<b>–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–∫–∞–∑–∞ ‚âà {rounded_number} —Ä—É–±.</b>\n"
#                         "\n–î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –Ω–∞—á–∞–ª–æ –Ω–∞–∂–º–∏—Ç–µ /start")
#         await bot.send_message(message.chat.id, message_text)
#         await state.finish()
#     except ValueError:
#         await bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.")
#
#
# async def process_price_accelerated_by_truck(message: types.Message, state: FSMContext):
#     """
#     –ö–æ–Ω–µ—á–Ω—ã–π —Ä–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –¥–æ—Å—Ç–∞–≤–∫–∏: –¶–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞ + –î–æ—Å—Ç–∞–≤–∫–∞ Poizon –¥–æ —Å–∫–ª–∞–¥–∞ –≤ –ö–∏—Ç–∞–µ + –°—Ç—Ä–∞—Ö–æ–≤–∫–∞ +
#                                         –î–æ—Å—Ç–∞–≤–∫–∞ –∏–∑ –ö–∏—Ç–∞—è –≤ –ú–æ—Å–∫–≤—É + –ö–æ–º–∏—Å—Å–∏—è = –ö–æ–Ω–µ—á–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞.
#     """
#     try:
#         data = await state.get_data()
#         shipping_cost = data.get('shipping_cost', 0)  # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ –∏–∑ –ö–∏—Ç–∞—è –≤ –ú–æ—Å–∫–≤—É
#         cny_rate = get_currency_rate('CNY')  # –ö—É—Ä—Å –Æ–∞–Ω—è –∫ —Ä—É–±–ª—é
#         price = float(message.text)  # –¶–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞ –≤ –Æ–∞–Ω—è—Ö –≤–≤–µ–¥–µ–Ω–Ω–∞—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
#         delivery_rub_cn = 30 * cny_rate  # –¶–µ–Ω–∞ –¥–æ—Å—Ç–∞–≤–∫–∏ Poizon –¥–æ —Å–∫–ª–∞–¥–∞ –≤ –ö–∏—Ç–∞–π
#         insurance_price = calculate_insurance_price(price)  # –†–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Å—Ç—Ä–∞—Ö–æ–≤–∫–∏
#         commission_price = calculate_commission_price(price)  # –†–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∫–æ–º–∏—Å—Å–∏–∏
#         # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∏—Ç–æ–≥–æ–≤—ã–µ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏—è
#         final_purchase_price = (price * cny_rate) + delivery_rub_cn + insurance_price + shipping_cost + commission_price
#         rounded_number = round(final_purchase_price, 2)  # –û–∫—Ä—É–≥–ª—è–µ–º –¥–æ 2 –∑–Ω–∞–∫–æ–≤ (–º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å)
#         message_text = (f"<b>–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–∫–∞–∑–∞ ‚âà {rounded_number} —Ä—É–±.</b>\n"
#                         "\n–î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –Ω–∞—á–∞–ª–æ –Ω–∞–∂–º–∏—Ç–µ /start")
#         await bot.send_message(message.chat.id, message_text)
#         await state.finish()
#     except ValueError:
#         await bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.")
#
#
# async def process_price_regular_truck(message: types.Message, state: FSMContext):
#     """
#     –ö–æ–Ω–µ—á–Ω—ã–π —Ä–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –¥–æ—Å—Ç–∞–≤–∫–∏: –¶–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞ + –î–æ—Å—Ç–∞–≤–∫–∞ Poizon –¥–æ —Å–∫–ª–∞–¥–∞ –≤ –ö–∏—Ç–∞–µ + –°—Ç—Ä–∞—Ö–æ–≤–∫–∞ +
#                                         –î–æ—Å—Ç–∞–≤–∫–∞ –∏–∑ –ö–∏—Ç–∞—è –≤ –ú–æ—Å–∫–≤—É + –ö–æ–º–∏—Å—Å–∏—è = –ö–æ–Ω–µ—á–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞.
#     """
#     try:
#         data = await state.get_data()
#         shipping_cost = data.get('shipping_cost', 0)  # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ –∏–∑ –ö–∏—Ç–∞—è –≤ –ú–æ—Å–∫–≤—É
#         cny_rate = get_currency_rate('CNY')  # –ö—É—Ä—Å –Æ–∞–Ω—è –∫ —Ä—É–±–ª—é
#         price = float(message.text)  # –¶–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞ –≤ –Æ–∞–Ω—è—Ö –≤–≤–µ–¥–µ–Ω–Ω–∞—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
#         delivery_rub_cn = 30 * cny_rate  # –¶–µ–Ω–∞ –¥–æ—Å—Ç–∞–≤–∫–∏ Poizon –¥–æ —Å–∫–ª–∞–¥–∞ –≤ –ö–∏—Ç–∞–π
#         insurance_price = calculate_insurance_price(price)  # –†–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Å—Ç—Ä–∞—Ö–æ–≤–∫–∏
#         commission_price = calculate_commission_price(price)  # –†–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∫–æ–º–∏—Å—Å–∏–∏
#         # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∏—Ç–æ–≥–æ–≤—ã–µ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏—è
#         final_purchase_price = (price * cny_rate) + delivery_rub_cn + insurance_price + shipping_cost + commission_price
#         rounded_number = round(final_purchase_price, 2)  # –û–∫—Ä—É–≥–ª—è–µ–º –¥–æ 2 –∑–Ω–∞–∫–æ–≤ (–º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å)
#         message_text = (f"<b>–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–∫–∞–∑–∞ ‚âà {rounded_number} —Ä—É–±.</b>\n"
#                         "\n–î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –Ω–∞—á–∞–ª–æ –Ω–∞–∂–º–∏—Ç–µ /start")
#         await bot.send_message(message.chat.id, message_text)
#         await state.finish()
#     except ValueError:
#         await bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.")
#
#
# def price_calculator_handler():
#     """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º handlers –¥–ª—è –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞"""
#     dp.register_message_handler(calculate_cost_handler)  # –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Ü–µ–Ω—ã
#     dp.register_message_handler(process_delivery_handler)  # –í–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —Ü–µ–Ω—ã —Ç–æ–≤–∞—Ä–∞ –≤ —Ä—É–±–ª—è—Ö üöÄ –û–ø—Ü–∏—è "1-3 –¥–Ω—è
#     dp.register_message_handler(process_price)  # –ö–æ–Ω–µ—á–Ω—ã–π —Ä–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –¥–æ—Å—Ç–∞–≤–∫–∏
#     dp.register_message_handler(process_technics)  # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ —Ç–µ—Ö–Ω–∏–∫–∏
#     dp.register_message_handler(process_delivery_handler)  # –í–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —Ü–µ–Ω—ã —Ç–æ–≤–∞—Ä–∞ –≤ —Ä—É–±–ª—è—Ö üöÄ –û–ø—Ü–∏—è "1-3 –¥–Ω—è
#     dp.register_message_handler(process_weight)  # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –≤–µ—Å–∞ —Ç–µ—Ö–Ω–∏–∫–∏ üöõ 8-15 –¥–Ω–µ–π
#     dp.register_message_handler(process_price_input)  # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–µ–¥–µ–Ω–Ω–æ–π —Ü–µ–Ω—ã —Ç–æ–≤–∞—Ä–∞ üöÄ 1-3 –¥–Ω—è
#     dp.register_message_handler(process_price_regular_truck)  # –ö–æ–Ω–µ—á–Ω—ã–π —Ä–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –¥–æ—Å—Ç–∞–≤–∫–∏
#     dp.register_message_handler(process_price_accelerated_by_truck)  # –ö–æ–Ω–µ—á–Ω—ã–π —Ä–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –¥–æ—Å—Ç–∞–≤–∫–∏
#     dp.register_message_handler(process_price_aircraft)  # –ö–æ–Ω–µ—á–Ω—ã–π —Ä–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –¥–æ—Å—Ç–∞–≤–∫–∏
