import sqlite3

from aiogram import types
from aiogram.dispatcher import FSMContext

from handlers.add_track_number_handlers import get_order_status
from system.dispatcher import dp, bot


@dp.callback_query_handler(lambda c: c.data == "my_order")
async def my_order(callback_query: types.CallbackQuery, state: FSMContext):
    await state.reset_state()  # –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è FSM (–∫–æ–Ω–µ—á–Ω–æ–≥–æ –∞–≤—Ç–æ–º–∞—Ç–∞) –∫ –µ–≥–æ –Ω–∞—á–∞–ª—å–Ω–æ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é
    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö SQLite
    conn = sqlite3.connect('setting/orders.db')
    # –°–æ–∑–¥–∞–Ω–∏–µ –∫—É—Ä—Å–æ—Ä–∞ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è SQL-–∑–∞–ø—Ä–æ—Å–æ–≤
    cursor = conn.cursor()
    # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ SQL-–∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
    cursor.execute("SELECT * FROM user_orders WHERE user_id = ?", (callback_query.from_user.id,))
    # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∑–∞–ø—Ä–æ—Å–∞
    rows = cursor.fetchall()
    if rows:
        for row in rows:
            # dell_duplicate_order_number(row[1])
            status_list = get_order_status(row[1])
            status_message = "\n".join(status_list) if status_list else "–°—Ç–∞—Ç—É—Å –Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω"
            order_details = (f"üì¶ –ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞: {row[1]}\n"
                             f"üìù –ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞: {row[2]}\n"
                             f"üí∏ –¶–µ–Ω–∞: {row[3]}\n"
                             f"üìÜ –ü—Ä–∏–º–µ—Ä–Ω–∞—è –¥–∞—Ç–∞ –¥–æ—Å—Ç–∞–≤–∫–∏: {row[4]}\n"
                             f"üîî –°—Ç–∞—Ç—É—Å: {status_message}\n"
                             "\n\n–î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –Ω–∞—á–∞–ª–æ –Ω–∞–∂–º–∏—Ç–µ /start")
            await bot.send_message(callback_query.from_user.id, order_details)
    else:
        await bot.send_message(callback_query.from_user.id, "–£ –≤–∞—Å –Ω–µ—Ç –∑–∞–∫–∞–∑–æ–≤")


def my_order_handler():
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º handlers –¥–ª—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π"""
    dp.register_message_handler(my_order)
